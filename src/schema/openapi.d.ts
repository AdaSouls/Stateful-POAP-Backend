/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/event/getAll": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    get: {
        parameters: {
            query: {
                /** @description Owner primary key */
                ownerUuid: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/event/getAllByAddress": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all events by issuer address
         * @description Get all events by issuer address
         */
        get: {
            parameters: {
                query: {
                    /** @description Issuer address */
                    address: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description A list of events */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Event"][];
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/event/getByPK": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/event/createEvent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/issuer/getAll": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/issuer/getIssuerByEmail": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/issuer/getIssuerByPK": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/issuer/createNewIssuer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/issuer/updateIssuer": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    patch: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/owner/getAll": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/owner/getOwnerByAddress": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/owner/getOwnerByEmail": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/owner/getOwnerByPK": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/owner/createOwner": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create new owner
         * @description Create new owner
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * Format: address
                         * @example 0xdD2FD4581271e330360230F9337D5c0430Bf44C0
                         */
                        address: string;
                        /**
                         * Format: email
                         * @example mail@example.com
                         */
                        email: string;
                    };
                };
            };
            responses: {
                /** @description Owner created */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Owner"];
                    };
                };
                /** @description Invalid request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/owner/updateOwner": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * Update owner
         * @description Update owner
         */
        patch: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * Format: uuid
                         * @example 123e4567-e89b-12d3-a456-426614174000
                         */
                        ownerUuid: string;
                    } | {
                        /**
                         * Format: email
                         * @example mail@example.com
                         */
                        email?: string;
                    } | {
                        /**
                         * Format: address
                         * @example 0xdD2FD4581271e330360230F9337D5c0430Bf44C0
                         */
                        address?: string;
                    };
                };
            };
            responses: {
                /** @description Owner updated successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Owner"];
                    };
                };
                /** @description Invalid request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Owner not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        trace?: never;
    };
    "/poap/getAll": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all poaps
         * @description Get all poaps
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description A list of poaps */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Poap"][];
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/poap/getAllByAddress": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all poaps by owner address
         * @description Get all poaps by owner address
         */
        get: {
            parameters: {
                query: {
                    /** @description Owner address */
                    address: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description A list of poaps */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Poap"][];
                    };
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/poap/getByPK": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get poap by primary key
         * @description Get poap by primary key
         */
        get: {
            parameters: {
                query: {
                    /** @description Poap primary key */
                    poapUuid: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description A poap */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Poap"];
                    };
                };
                /** @description Poap not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/poap/getAllByEvent": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all poaps by event
         * @description Get all poaps by event
         */
        get: {
            parameters: {
                query: {
                    /** @description Event primary key */
                    eventUuid: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description A poap */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Poap"];
                    };
                };
                /** @description Poap not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/poap/mintPoap": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Mint poap
         * @description Mint poap
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * Format: uuid
                         * @example 123e4567-e89b-12d3-a456-426614174000
                         */
                        eventUuid: string;
                        /**
                         * Format: uuid
                         * @example 123e4567-e89b-12d3-a456-426614174000
                         */
                        ownerUuid: string;
                    };
                };
            };
            responses: {
                /** @description Poap minted */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Poap"];
                    };
                };
                /** @description Invalid request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/poap/addEventToPoap": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Add event to poap
         * @description Add event to poap
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * Format: uuid
                         * @example 123e4567-e89b-12d3-a456-426614174000
                         */
                        poapUuid: string;
                        /**
                         * Format: uuid
                         * @example 123e4567-e89b-12d3-a456-426614174000
                         */
                        eventUuid: string;
                    };
                };
            };
            responses: {
                /** @description Event added to poap */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["EventPoap"];
                    };
                };
                /** @description Invalid request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Internal server error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Event: {
            /**
             * Format: uuid
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            eventUuid?: string;
            /** @example 1 */
            idInContract?: number;
            /** @example Event title */
            title?: string;
            /** @example Event description */
            description?: string;
            /** @example Buenos Aires */
            city?: string;
            /** @example Argentina */
            country?: string;
            /**
             * Format: date
             * @example 2022-01-01
             */
            startDate?: string;
            /**
             * Format: date
             * @example 2022-01-02
             */
            endDate?: string;
            /**
             * Format: date
             * @example 2022-01-03
             */
            expiryDate?: string;
            /** @example 2022 */
            year?: number;
            /** @example https://www.example.com */
            eventUrl?: string;
            /** @example true */
            virtualEvent?: boolean;
            /** @example https://www.example.com/image.jpg */
            image?: string;
            /** @example secret */
            secretCode?: string;
            /** @example template */
            eventTemplateId?: string;
            /**
             * Format: email
             * @example mail@example.com
             */
            email?: string;
            /** @example 100 */
            requestedCodes?: number;
            /** @example false */
            privateEvent?: boolean;
            /** @example Event purpose */
            purpose?: string;
            /** @example Event platform */
            platform?: string;
            /**
             * @example Virtual
             * @enum {string}
             */
            eventType?: "Virtual" | "In-Person" | "Both";
            /** @example 100 */
            amountOfAttendees?: number;
            /**
             * @example Poap
             * @enum {string}
             */
            poapType?: "Poap" | "Soulbound" | "Consensual";
            /** @example 100 */
            poapsToBeMinted?: number;
            /** @example 50 */
            mintedPoaps?: number;
        };
        EventPoap: {
            /**
             * Format: uuid
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            relationUuid?: string;
            /**
             * Format: uuid
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            eventUuid?: string;
            /**
             * Format: uuid
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            poapUuid?: string;
        };
        Issuer: {
            /**
             * Format: uuid
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            issuerUuid?: string;
            /** @example 1 */
            issuerIdInContract?: number;
            /**
             * Format: email
             * @example mail@example.com
             */
            email?: string;
            /**
             * Format: address
             * @example 0xdD2FD4581271e330360230F9337D5c0430Bf44C0
             */
            address?: string;
            /** @example Nerdearla */
            name?: string;
            /** @example Programadores Argentinos */
            organization?: string;
        };
        Owner: {
            /**
             * Format: uuid
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            ownerUuid?: string;
            /**
             * Format: email
             * @example mail@example.com
             */
            email?: string;
            /**
             * Format: address
             * @example 0xdD2FD4581271e330360230F9337D5c0430Bf44C0
             */
            address?: string;
        };
        Poap: {
            /**
             * Format: uuid
             * @example 123e4567-e89b-12d3-a456-426614174000
             */
            poapUuid?: string;
            /** @example 1 */
            instance?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
