{
  "openapi": "3.0.3",
  "info": {
    "title": "ADA Soulbound Token API",
    "version": "1.0.0",
    "description": "Route definitions for ADA's Soulbound Token API"
  },
  "tags": [
    {
      "name": "Owner",
      "description": "Owner operations"
    },
    {
      "name": "Issuer",
      "description": "Issuer operations"
    },
    {
      "name": "Event",
      "description": "Event operations"
    },
    {
      "name": "Poap",
      "description": "Poap operations"
    }
  ],
  "externalDocs": {
    "description": "Find out more about ADA's Soulbound Tokens",
    "url": "https://www.adasouls.io/"
  },
  "paths": {
    "/event/getAll": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get all events",
        "description": "Get all events",
        "responses": {
          "200": {
            "description": "A list of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/event/getAllByAddress": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get all events by issuer address",
        "description": "Get all events by issuer address",
        "parameters": [
          {
            "in": "query",
            "name": "address",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Issuer address"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of events",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/event/getByPK": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get event by primary key",
        "description": "Get event by primary key",
        "parameters": [
          {
            "in": "query",
            "name": "eventUuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Event primary key"
          }
        ],
        "responses": {
          "200": {
            "description": "An event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Event not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/event/getAllByApprovalStatus": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Get event by approval status",
        "description": "Get event by approval status",
        "parameters": [
          {
            "in": "query",
            "name": "approved",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Event approval status"
          }
        ],
        "responses": {
          "200": {
            "description": "An event",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "404": {
            "description": "Event not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/event/createEvent": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Create new event",
        "description": "Create new event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Event title"
                  },
                  "description": {
                    "type": "string",
                    "example": "Event description"
                  },
                  "city": {
                    "type": "string",
                    "example": "Buenos Aires"
                  },
                  "country": {
                    "type": "string",
                    "example": "Argentina"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2022-01-01"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2022-01-02"
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2022-01-03"
                  },
                  "year": {
                    "type": "integer",
                    "example": 2022
                  },
                  "eventUrl": {
                    "type": "string",
                    "example": "https: *www.example.com"
                  },
                  "virtualEvent": {
                    "type": "boolean",
                    "example": true
                  },
                  "image": {
                    "type": "string",
                    "example": "https: *www.example.com/image.jpg"
                  },
                  "secretCode": {
                    "type": "string",
                    "example": "secret"
                  },
                  "eventTemplateId": {
                    "type": "string",
                    "example": "template"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "mail@example.com"
                  },
                  "requestedCodes": {
                    "type": "integer",
                    "example": 100
                  },
                  "privateEvent": {
                    "type": "boolean",
                    "example": false
                  },
                  "purpose": {
                    "type": "string",
                    "example": "Event purpose"
                  },
                  "platform": {
                    "type": "string",
                    "example": "Event platform"
                  },
                  "eventType": {
                    "type": "string",
                    "enum": [
                      "Virtual",
                      "In-Person",
                      "Both",
                      "Unknown"
                    ],
                    "example": "Virtual"
                  },
                  "amountOfAttendees": {
                    "type": "integer",
                    "example": 100
                  },
                  "poapType": {
                    "type": "string",
                    "enum": [
                      "Poap",
                      "Soulbound",
                      "Consensual"
                    ],
                    "example": "Poap"
                  },
                  "poapsToBeMinted": {
                    "type": "integer",
                    "example": 100
                  },
                  "mintedPoaps": {
                    "type": "integer",
                    "example": 50
                  },
                  "issuerUuid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "required": [
                  "title",
                  "description",
                  "startDate",
                  "endDate",
                  "virtualEvent",
                  "image",
                  "email",
                  "requestedCodes",
                  "privateEvent",
                  "platform",
                  "poapType",
                  "poapsToBeMinted",
                  "mintedPoaps",
                  "issuerUuid"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/event/createAndApproveMock": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Create new event",
        "description": "Create new event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Event title"
                  },
                  "description": {
                    "type": "string",
                    "example": "Event description"
                  },
                  "city": {
                    "type": "string",
                    "example": "Buenos Aires"
                  },
                  "country": {
                    "type": "string",
                    "example": "Argentina"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2022-01-01"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2022-01-02"
                  },
                  "expiryDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2022-01-03"
                  },
                  "year": {
                    "type": "integer",
                    "example": 2022
                  },
                  "eventUrl": {
                    "type": "string",
                    "example": "https: *www.example.com"
                  },
                  "virtualEvent": {
                    "type": "boolean",
                    "example": true
                  },
                  "image": {
                    "type": "string",
                    "example": "https: *www.example.com/image.jpg"
                  },
                  "secretCode": {
                    "type": "string",
                    "example": "secret"
                  },
                  "eventTemplateId": {
                    "type": "string",
                    "example": "template"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "mail@example.com"
                  },
                  "requestedCodes": {
                    "type": "integer",
                    "example": 100
                  },
                  "privateEvent": {
                    "type": "boolean",
                    "example": false
                  },
                  "purpose": {
                    "type": "string",
                    "example": "Event purpose"
                  },
                  "platform": {
                    "type": "string",
                    "example": "Event platform"
                  },
                  "eventType": {
                    "type": "string",
                    "enum": [
                      "Virtual",
                      "In-Person",
                      "Both",
                      "Unknown"
                    ],
                    "example": "Virtual"
                  },
                  "amountOfAttendees": {
                    "type": "integer",
                    "example": 100
                  },
                  "poapType": {
                    "type": "string",
                    "enum": [
                      "Poap",
                      "Soulbound",
                      "Consensual"
                    ],
                    "example": "Poap"
                  },
                  "poapsToBeMinted": {
                    "type": "integer",
                    "example": 100
                  },
                  "mintedPoaps": {
                    "type": "integer",
                    "example": 50
                  },
                  "issuerUuid": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "required": [
                  "title",
                  "description",
                  "startDate",
                  "endDate",
                  "virtualEvent",
                  "image",
                  "email",
                  "requestedCodes",
                  "privateEvent",
                  "platform",
                  "poapType",
                  "poapsToBeMinted",
                  "mintedPoaps",
                  "issuerUuid"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/event/approveOrReject": {
      "patch": {
        "tags": [
          "Event"
        ],
        "summary": "Approve or reject an event",
        "description": "Approve or reject an event",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "approval": {
                    "type": "string",
                    "example": "Approved"
                  },
                  "eventIdInContract": {
                    "type": "number",
                    "example": 1
                  },
                  "issuerAddress": {
                    "type": "string",
                    "format": "uuid",
                    "example": "0xdD2FD4581271e330360230F9337D5c0430Bf44C0"
                  },
                  "contractAddress": {
                    "type": "string",
                    "format": "address",
                    "example": "0xdD2FD4581271e330360230F9337D5c0430Bf44C0"
                  }
                },
                "required": [
                  "approval",
                  "eventIdInContract",
                  "issuerAddress",
                  "contractAddress"
                ]
              }
            }
          },
          "responses": {
            "200": {
              "description": "An event",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            },
            "404": {
              "description": "Event not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      }
    },
    "/issuer/getAll": {
      "get": {
        "tags": [
          "Issuer"
        ],
        "summary": "Get all issuers",
        "description": "Get all issuers",
        "responses": {
          "200": {
            "description": "A list of issuers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Issuer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/issuer/getAllByAddress": {
      "get": {
        "tags": [
          "Issuer"
        ],
        "summary": "Get all issuers by address",
        "description": "Get all issuers by address",
        "parameters": [
          {
            "in": "query",
            "name": "address",
            "required": true,
            "schema": {
              "type": "string",
              "format": "address"
            },
            "description": "Issuer's address"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of issuers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Issuer"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/issuer/getIssuerByEmail": {
      "get": {
        "tags": [
          "Issuer"
        ],
        "summary": "Get issuer by email",
        "description": "Get issuer by email",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Issuer email"
          }
        ],
        "responses": {
          "200": {
            "description": "An issuer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Issuer"
                }
              }
            }
          },
          "404": {
            "description": "Issuer not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/issuer/getIssuerByPK": {
      "get": {
        "tags": [
          "Issuer"
        ],
        "summary": "Get issuer by primary key",
        "description": "Get issuer by primary key",
        "parameters": [
          {
            "in": "query",
            "name": "issuerUuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Issuer primary key"
          }
        ],
        "responses": {
          "200": {
            "description": "An issuer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Issuer"
                }
              }
            }
          },
          "404": {
            "description": "Issuer not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/issuer/createNewIssuer": {
      "post": {
        "tags": [
          "Issuer"
        ],
        "summary": "Create new issuer",
        "description": "Create new issuer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "type": "string",
                    "format": "address",
                    "example": "0xdD2FD4581271e330360230F9337D5c0430Bf44C0"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "mail@example.com"
                  },
                  "organization": {
                    "type": "string",
                    "example": "Some_Organization"
                  },
                  "name": {
                    "type": "string",
                    "example": "Name_of_the_issuer_for_the_event"
                  }
                },
                "required": [
                  "address",
                  "email",
                  "organization",
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Issuer created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Issuer"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/issuer/updateIssuer": {
      "patch": {
        "tags": [
          "Issuer"
        ],
        "summary": "Update issuer",
        "description": "Update issuer",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "issuerUuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  }
                },
                "required": [
                  "issuerUuid"
                ],
                "anyOf": [
                  {
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "mail@example.com"
                      }
                    }
                  }
                ]
              }
            }
          },
          "responses": {
            "200": {
              "description": "Issuer updated successfully",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Issuer"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid request"
            },
            "404": {
              "description": "Issuer not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      }
    },
    "/owner/getAll": {
      "get": {
        "tags": [
          "Owner"
        ],
        "summary": "Get all owners",
        "description": "Get all owners",
        "responses": {
          "200": {
            "description": "A list of owners",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Owner"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/owner/getOwnerByAddress": {
      "get": {
        "tags": [
          "Owner"
        ],
        "summary": "Get owner by address",
        "description": "Get owner by address",
        "parameters": [
          {
            "in": "query",
            "name": "address",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Owner address"
          }
        ],
        "responses": {
          "200": {
            "description": "An owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              }
            }
          },
          "404": {
            "description": "Owner not found"
          }
        }
      }
    },
    "/owner/getOwnerByEmail": {
      "get": {
        "tags": [
          "Owner"
        ],
        "summary": "Get owner by email",
        "description": "Get owner by email",
        "parameters": [
          {
            "in": "query",
            "name": "email",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Owner email"
          }
        ],
        "responses": {
          "200": {
            "description": "An owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              }
            }
          },
          "404": {
            "description": "Owner not found"
          }
        }
      }
    },
    "/owner/getOwnerByPK": {
      "get": {
        "tags": [
          "Owner"
        ],
        "summary": "Get owner by primary key",
        "description": "Get owner by primary key",
        "parameters": [
          {
            "in": "query",
            "name": "ownerUuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Owner primary key"
          }
        ],
        "responses": {
          "200": {
            "description": "An owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              }
            }
          },
          "404": {
            "description": "Owner not found"
          }
        }
      }
    },
    "/owner/createOwner": {
      "post": {
        "tags": [
          "Owner"
        ],
        "summary": "Create new owner",
        "description": "Create new owner",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "address": {
                    "type": "string",
                    "format": "address",
                    "example": "0xdD2FD4581271e330360230F9337D5c0430Bf44C0"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "mail@example.com"
                  }
                },
                "required": [
                  "address",
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Owner created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/owner/updateOwner": {
      "patch": {
        "tags": [
          "Owner"
        ],
        "summary": "Update owner",
        "description": "Update owner",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ownerUuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  }
                },
                "required": [
                  "ownerUuid"
                ],
                "anyOf": [
                  {
                    "properties": {
                      "email": {
                        "type": "string",
                        "format": "email",
                        "example": "mail@example.com"
                      }
                    }
                  },
                  {
                    "properties": {
                      "address": {
                        "type": "string",
                        "format": "address",
                        "example": "0xdD2FD4581271e330360230F9337D5c0430Bf44C0"
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Owner updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Owner"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Owner not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/poap/getAll": {
      "get": {
        "tags": [
          "Poap"
        ],
        "summary": "Get all poaps",
        "description": "Get all poaps",
        "responses": {
          "200": {
            "description": "A list of poaps",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Poap"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/poap/getAllByAddress": {
      "get": {
        "tags": [
          "Poap"
        ],
        "summary": "Get all poaps by owner address",
        "description": "Get all poaps by owner address",
        "parameters": [
          {
            "in": "query",
            "name": "address",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Owner address"
          }
        ],
        "responses": {
          "200": {
            "description": "A list of poaps",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Poap"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/poap/getByPK": {
      "get": {
        "tags": [
          "Poap"
        ],
        "summary": "Get poap by primary key",
        "description": "Get poap by primary key",
        "parameters": [
          {
            "in": "query",
            "name": "poapUuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Poap primary key"
          }
        ],
        "responses": {
          "200": {
            "description": "A poap",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Poap"
                }
              }
            }
          },
          "404": {
            "description": "Poap not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/poap/getAllByEvent": {
      "get": {
        "tags": [
          "Poap"
        ],
        "summary": "Get all poaps by event",
        "description": "Get all poaps by event",
        "parameters": [
          {
            "in": "query",
            "name": "eventUuid",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Event primary key"
          }
        ],
        "responses": {
          "200": {
            "description": "A poap",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Poap"
                }
              }
            }
          },
          "404": {
            "description": "Poap not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/poap/mintPoap": {
      "post": {
        "tags": [
          "Poap"
        ],
        "summary": "Mint poap",
        "description": "Mint poap",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "eventUuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  },
                  "ownerAddress": {
                    "type": "string",
                    "format": "address"
                  }
                },
                "required": [
                  "eventUuid",
                  "ownerAddress"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Poap minted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Poap"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/poap/addEventToPoap": {
      "post": {
        "tags": [
          "Poap"
        ],
        "summary": "Add event to poap",
        "description": "Add event to poap",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "poapUuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  },
                  "eventUuid": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  }
                },
                "required": [
                  "poapUuid",
                  "eventUuid"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event added to poap",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventPoap"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "openapi": {
      "0": "3",
      "1": ".",
      "2": "0",
      "3": ".",
      "4": "3"
    },
    "info": {
      "title": "ADA Soulbound Token API",
      "version": "1.0.0",
      "description": "Route definitions for ADA's Soulbound Token API"
    },
    "externalDocs": {
      "description": "Find out more about ADA's Soulbound Tokens",
      "url": "https://www.adasouls.io/"
    }
  },
  "components": {
    "schemas": {
      "Event": {
        "type": "object",
        "properties": {
          "eventUuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "idInContract": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Event title"
          },
          "description": {
            "type": "string",
            "example": "Event description"
          },
          "city": {
            "type": "string",
            "example": "Buenos Aires"
          },
          "country": {
            "type": "string",
            "example": "Argentina"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2022-01-01"
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2022-01-02"
          },
          "expiryDate": {
            "type": "string",
            "format": "date",
            "example": "2022-01-03"
          },
          "year": {
            "type": "integer",
            "example": 2022
          },
          "eventUrl": {
            "type": "string",
            "example": "https://www.example.com"
          },
          "virtualEvent": {
            "type": "boolean",
            "example": true
          },
          "image": {
            "type": "string",
            "example": "https://www.example.com/image.jpg"
          },
          "secretCode": {
            "type": "string",
            "example": "secret"
          },
          "eventTemplateId": {
            "type": "string",
            "example": "template"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "mail@example.com"
          },
          "requestedCodes": {
            "type": "integer",
            "example": 100
          },
          "privateEvent": {
            "type": "boolean",
            "example": false
          },
          "purpose": {
            "type": "string",
            "example": "Event purpose"
          },
          "platform": {
            "type": "string",
            "example": "Event platform"
          },
          "eventType": {
            "type": "string",
            "enum": [
              "Virtual",
              "In-Person",
              "Both"
            ],
            "example": "Virtual"
          },
          "amountOfAttendees": {
            "type": "integer",
            "example": 100
          },
          "poapType": {
            "type": "string",
            "enum": [
              "Poap",
              "Soulbound",
              "Consensual"
            ],
            "example": "Poap"
          },
          "poapsToBeMinted": {
            "type": "integer",
            "example": 100
          },
          "mintedPoaps": {
            "type": "integer",
            "example": 50
          },
          "approved": {
            "type": "string",
            "enum": [
              "Pending",
              "Approved",
              "Rejected"
            ],
            "default": "Pending"
          }
        }
      },
      "EventPoap": {
        "type": "object",
        "properties": {
          "relationUuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "eventUuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "poapUuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        }
      },
      "Issuer": {
        "type": "object",
        "properties": {
          "issuerUuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "issuerIdInContract": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "mail@example.com"
          },
          "address": {
            "type": "string",
            "format": "address",
            "example": "0xdD2FD4581271e330360230F9337D5c0430Bf44C0"
          },
          "name": {
            "type": "string",
            "example": "Nerdearla"
          },
          "organization": {
            "type": "string",
            "example": "Programadores Argentinos"
          }
        }
      },
      "Owner": {
        "type": "object",
        "properties": {
          "ownerUuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "mail@example.com"
          },
          "address": {
            "type": "string",
            "format": "address",
            "example": "0xdD2FD4581271e330360230F9337D5c0430Bf44C0"
          }
        }
      },
      "Poap": {
        "type": "object",
        "properties": {
          "poapUuid": {
            "type": "string",
            "format": "uuid",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "instance": {
            "type": "integer",
            "example": 1
          }
        }
      }
    }
  }
}